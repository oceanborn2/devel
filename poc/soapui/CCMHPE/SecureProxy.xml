<?xml version="1.0" encoding="UTF-8"?>
<con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="SecureProxy" searchProperties="true" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:testStep type="groovy" name="ProxyService"><con:settings/><con:config><script>import groovy.net.soap.SoapServer
import groovy.net.soap.SoapClient
import java.security.SecureRandom
 
class EWSProxyService {

	final PROXY_URL = 'http://localhost:8080/ews.client.EngineService/ews.client.EngineService?wsdl'
	final SecureRandom secRand = new SecureRandom()
	
	def EWSProxyService() {
		proxy.initSecret()	
	}
	
	// initialize a secret key between the application and the proxy - this must be a true random sequence hence the use
	// of SecureRandom
	def initSecret() {
		secRand.nextLong()	
	}
	
	def compose() {
		def proxy = new SoapClient(PROXY_URL)		
	
	}

}


def server = new SoapServer("localhost", 6980)
server.setNode("EWSProxyService")
server.start()


</script></con:config></con:testStep><con:testStep type="groovy" name="ClientApplication"><con:settings/><con:config><script>import groovy.net.soap.SoapClient

def proxy = new SoapClient("http://localhost:6980/EWSProxyService?wsdl")

def secretkey = proxy.initSecret()
println("secret key:" + secretkey)
def result = proxy.compose()
 </script></con:config></con:testStep><con:properties/></con:testCase>