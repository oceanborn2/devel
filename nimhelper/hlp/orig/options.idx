Abstract	options.html#abstract	 Abstract	
Tutorial	options.html#tutorial	 Tutorial	
Option	options.html#Option	options : Option	
UnpackError	options.html#UnpackError	options : UnpackError	
some	options.html#some,T	options : some[T](val: T): Option[T]	
none	options.html#none,typedesc	options : none[](T: typedesc): Option[T]	
isSome	options.html#isSome,Option[T]	options : isSome[T](self: Option[T]): bool	
isNone	options.html#isNone,Option[T]	options : isNone[T](self: Option[T]): bool	
unsafeGet	options.html#unsafeGet,Option[T]	options : unsafeGet[T](self: Option[T]): T	
get	options.html#get,Option[T]	options : get[T](self: Option[T]): T	
get	options.html#get,Option[T],T	options : get[T](self: Option[T]; otherwise: T): T	
map	options.html#map,Option[T],proc(T)	options : map[T](self: Option[T]; callback: proc (input: T))	
map	options.html#map,Option[T],proc(T)_2	options : map[T, R](self: Option[T]; callback: proc (input: T): R): Option[R]	
filter	options.html#filter,Option[T],proc(T)	options : filter[T](self: Option[T]; callback: proc (input: T): bool): Option[T]	
`==`	options.html#==,Option,Option	options : `==`[Option](a, b: Option): bool	
`$`	options.html#$,Option[T]	options : `$`[T](self: Option[T]): string	
