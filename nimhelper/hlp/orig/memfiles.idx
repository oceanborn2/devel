memory mapped files	memfiles.html#memory-mapped-files_1	Module memfiles	
mmap	memfiles.html#mmap_1	Module memfiles	
MemFile	memfiles.html#MemFile	memfiles : MemFile	
mapMem	memfiles.html#mapMem,MemFile,FileMode,int	memfiles : mapMem(m: var MemFile; mode: FileMode = fmRead; mappedSize = - 1; offset = 0): pointer	
unmapMem	memfiles.html#unmapMem,MemFile,pointer,int	memfiles : unmapMem(f: var MemFile; p: pointer; size: int)	
open	memfiles.html#open,string,FileMode,int	memfiles : open(filename: string; mode: FileMode = fmRead; mappedSize = - 1; offset = 0;\n     newFileSize = - 1): MemFile	
close	memfiles.html#close,MemFile	memfiles : close(f: var MemFile)	
MemSlice	memfiles.html#MemSlice	memfiles : MemSlice	
`$`	memfiles.html#$,MemSlice	memfiles : `$`(ms: MemSlice): string	
memSlices	memfiles.html#memSlices.i,MemFile,Char,Char	memfiles : memSlices(mfile: MemFile; delim = &#x27;\\x0A&#x27;; eat = &#x27;\\x0D&#x27;): MemSlice	
lines	memfiles.html#lines.i,MemFile,TaintedString,Char,Char	memfiles : lines(mfile: MemFile; buf: var TaintedString; delim = &#x27;\\x0A&#x27;; eat = &#x27;\\x0D&#x27;): TaintedString	
lines	memfiles.html#lines.i,MemFile,Char,Char	memfiles : lines(mfile: MemFile; delim = &#x27;\\x0A&#x27;; eat = &#x27;\\x0D&#x27;): TaintedString	
