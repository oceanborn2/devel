Licence of the PCRE library	re.html#licence-of-the-pcre-library	 Licence of the PCRE library	
Regular expression syntax and semantics	re.html#regular-expression-syntax-and-semantics	 Regular expression syntax and semantics	
Backslash	re.html#regular-expression-syntax-and-semantics-backslash	  Backslash	
backslash	re.html#backslash_1	Backslash	
Non-printing characters	re.html#regular-expression-syntax-and-semantics-non-printing-characters	  Non-printing characters	
Generic character types	re.html#regular-expression-syntax-and-semantics-generic-character-types	  Generic character types	
generic character types	re.html#generic-character-types_1	Generic character types	
Simple assertions	re.html#regular-expression-syntax-and-semantics-simple-assertions	  Simple assertions	
simple assertions	re.html#simple-assertions_1	Simple assertions	
MaxSubpatterns	re.html#MaxSubpatterns	re : MaxSubpatterns	
RegexFlag	re.html#RegexFlag	re : RegexFlag	
Regex	re.html#Regex	re : Regex	
RegexError	re.html#RegexError	re : RegexError	
re	re.html#re,string	re : re(s: string; flags = {reExtended, reStudy}): Regex	
findBounds	re.html#findBounds,string,Regex,openArray[string],int	re : findBounds(s: string; pattern: Regex; matches: var openArray[string]; start = 0): tuple[\n    first, last: int]	
findBounds	re.html#findBounds,string,Regex,openArray[tuple[int,int]],int	re : findBounds(s: string; pattern: Regex;\n           matches: var openArray[tuple[first, last: int]]; start = 0): tuple[\n    first, last: int]	
findBounds	re.html#findBounds,string,Regex,int	re : findBounds(s: string; pattern: Regex; start = 0): tuple[first, last: int]	
matchLen	re.html#matchLen,string,Regex,openArray[string],int	re : matchLen(s: string; pattern: Regex; matches: var openArray[string]; start = 0): int	
matchLen	re.html#matchLen,string,Regex,int	re : matchLen(s: string; pattern: Regex; start = 0): int	
match	re.html#match,string,Regex,int	re : match(s: string; pattern: Regex; start = 0): bool	
match	re.html#match,string,Regex,openArray[string],int	re : match(s: string; pattern: Regex; matches: var openArray[string]; start = 0): bool	
find	re.html#find,string,Regex,openArray[string],int	re : find(s: string; pattern: Regex; matches: var openArray[string]; start = 0): int	
find	re.html#find,string,Regex,int	re : find(s: string; pattern: Regex; start = 0): int	
findAll	re.html#findAll.i,string,Regex,int	re : findAll(s: string; pattern: Regex; start = 0): string	
findAll	re.html#findAll,string,Regex,int	re : findAll(s: string; pattern: Regex; start = 0): seq[string]	
`=~`	re.html#=~.t,string,Regex	re : `=~`(s: string; pattern: Regex): expr	
contains	re.html#contains,string,Regex,int	re : contains(s: string; pattern: Regex; start = 0): bool	
contains	re.html#contains,string,Regex,openArray[string],int	re : contains(s: string; pattern: Regex; matches: var openArray[string]; start = 0): bool	
startsWith	re.html#startsWith,string,Regex	re : startsWith(s: string; prefix: Regex): bool	
endsWith	re.html#endsWith,string,Regex	re : endsWith(s: string; suffix: Regex): bool	
replace	re.html#replace,string,Regex,string	re : replace(s: string; sub: Regex; by = &quot;&quot;): string	
replacef	re.html#replacef,string,Regex,string	re : replacef(s: string; sub: Regex; by: string): string	
parallelReplace	re.html#parallelReplace,string,openArray[tuple[Regex,string]]	re : parallelReplace(s: string; subs: openArray[tuple[pattern: Regex, repl: string]]): string	
transformFile	re.html#transformFile,string,string,openArray[tuple[Regex,string]]	re : transformFile(infile, outfile: string;\n              subs: openArray[tuple[pattern: Regex, repl: string]])	
split	re.html#split.i,string,Regex	re : split(s: string; sep: Regex): string	
split	re.html#split,string,Regex	re : split(s: string; sep: Regex): seq[string]	
escapeRe	re.html#escapeRe,string	re : escapeRe(s: string): string	
reIdentifier	re.html#reIdentifier	re : reIdentifier	
reNatural	re.html#reNatural	re : reNatural	
reInteger	re.html#reInteger	re : reInteger	
reHex	re.html#reHex	re : reHex	
reBinary	re.html#reBinary	re : reBinary	
reOctal	re.html#reOctal	re : reOctal	
reFloat	re.html#reFloat	re : reFloat	
reEmail	re.html#reEmail	re : reEmail	
reURL	re.html#reURL	re : reURL	
